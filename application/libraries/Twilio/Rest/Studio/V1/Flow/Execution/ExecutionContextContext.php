<?php

declare(strict_types=1);

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0.
 * /       /
 */

namespace Twilio\Rest\Studio\V1\Flow\Execution;

use Twilio\Exceptions\TwilioException;
use Twilio\InstanceContext;
use Twilio\Version;

class ExecutionContextContext extends InstanceContext
{
    /**
     * Initialize the ExecutionContextContext.
     *
     * @param Version $version      Version that contains the resource
     * @param string  $flowSid      The SID of the Flow
     * @param string  $executionSid The SID of the Execution
     */
    public function __construct(Version $version, $flowSid, $executionSid)
    {
        parent::__construct($version);

        // Path Solution
        $this->solution = ['flowSid' => $flowSid, 'executionSid' => $executionSid];

        $this->uri = '/Flows/'.\rawurlencode($flowSid).'/Executions/'.\rawurlencode($executionSid).'/Context';
    }

    /**
     * Provide a friendly representation.
     *
     * @return string Machine friendly representation
     */
    public function __toString(): string
    {
        $context = [];
        foreach ($this->solution as $key => $value) {
            $context[] = "{$key}={$value}";
        }

        return '[Twilio.Studio.V1.ExecutionContextContext '.\implode(' ', $context).']';
    }

    /**
     * Fetch the ExecutionContextInstance.
     *
     * @throws TwilioException when an HTTP error occurs
     *
     * @return ExecutionContextInstance Fetched ExecutionContextInstance
     */
    public function fetch(): ExecutionContextInstance
    {
        $payload = $this->version->fetch('GET', $this->uri);

        return new ExecutionContextInstance(
            $this->version,
            $payload,
            $this->solution['flowSid'],
            $this->solution['executionSid']
        );
    }
}
