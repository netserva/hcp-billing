<?php

declare(strict_types=1);

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0.
 * /       /
 */

namespace Twilio\Rest\Messaging\V1;

use Twilio\Exceptions\TwilioException;
use Twilio\InstanceContext;
use Twilio\Version;

/**
 * PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
 */
class BrandRegistrationContext extends InstanceContext
{
    /**
     * Initialize the BrandRegistrationContext.
     *
     * @param Version $version Version that contains the resource
     * @param string  $sid     The SID that identifies the resource to fetch
     */
    public function __construct(Version $version, $sid)
    {
        parent::__construct($version);

        // Path Solution
        $this->solution = ['sid' => $sid];

        $this->uri = '/a2p/BrandRegistrations/'.\rawurlencode($sid).'';
    }

    /**
     * Provide a friendly representation.
     *
     * @return string Machine friendly representation
     */
    public function __toString(): string
    {
        $context = [];
        foreach ($this->solution as $key => $value) {
            $context[] = "{$key}={$value}";
        }

        return '[Twilio.Messaging.V1.BrandRegistrationContext '.\implode(' ', $context).']';
    }

    /**
     * Fetch the BrandRegistrationInstance.
     *
     * @throws TwilioException when an HTTP error occurs
     *
     * @return BrandRegistrationInstance Fetched BrandRegistrationInstance
     */
    public function fetch(): BrandRegistrationInstance
    {
        $payload = $this->version->fetch('GET', $this->uri);

        return new BrandRegistrationInstance($this->version, $payload, $this->solution['sid']);
    }
}
